plugins {
	id 'java-library'
	id 'info.solidsoft.pitest' version '1.15.0'
	id 'jacoco'
	id "com.diffplug.spotless" version "6.25.0"
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

// Ensure Spring Boot plugin uses Java 21
springBoot {
	mainClass = 'kata.hotel.api.CorporateHotelBookingApplication'
}

repositories {
	mavenCentral()
}

java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(21))
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
	testImplementation 'org.hamcrest:hamcrest:3.0'
	testImplementation 'org.hamcrest:hamcrest-library:3.0'
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // report is always generated after tests run

	// Include test classes with names ending with "Should"
	include '**/*Should.class'
}

pitest {
	junit5PluginVersion = '1.2.1'
	targetClasses = ['kata.*']
	threads = 4
	excludedMethods = ['equals', 'hashCode', 'toString']
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

apply from: file('setupTestsReports.gradle')

dependencyLocking {
	lockAllConfigurations()
}

// Command to update lock file: ./gradlew dependencies --write-locks

spotless {
	// optional: limit format enforcement to just the files changed by this feature branch
	ratchetFrom 'origin/main'

	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '.gitattributes', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		removeUnusedImports()
		googleJavaFormat()
		formatAnnotations()
		licenseHeader '/* (C)$YEAR */'
	}
}
